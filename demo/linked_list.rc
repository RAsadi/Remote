struct node {
  next: node^,
  item: u32
}

fn print(ch: u8^, size: u8) {
  __putstr(1, ch, size);
}

fn print_number(i: u32) {
  if (i == 0) {
    return;
  }
  print_number(i / 10);
  let ch = '0' + (i % 10 as u8);
  print(&ch, 1);
}

fn sum_linked_list(n: node^) -> u32 {
  if (n == null) {
    return 0;
  }

  return (n^).item + sum_linked_list((n^).next);
}

fn main() -> u32 {

  let first_node = node{null, 1};
  let second_node = node{&first_node, 2};
  let third_node = node{&second_node, 3};

  let num = sum_linked_list(&third_node);

  print_number(num);
  print("\n", 1);

  return 0;
}