
** Conflict (shift/reduce) in state 35.
** Token involved: LBrace
** This state is reached from translation_unit after reading:

Fn Iden LParen loption(separated_nonempty_list(Comma,type_binding)) RParen option(type_signature) LBrace While Iden

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

translation_unit 
list(top_level_element) Eof 
top_level_element list(top_level_element) 
fn 
Fn Iden LParen loption(separated_nonempty_list(Comma,type_binding)) RParen option(type_signature) compound_stmt 
                                                                                                  LBrace list(stmt) RBrace 
                                                                                                         stmt list(stmt) 
                                                                                                         iteration_stmt 
                                                                                                         while_stmt 
                                                                                                         (?)

** In state 35, looking ahead at LBrace, reducing production
** primary_expr -> Iden
** is permitted because of the following sub-derivation:

While lor_expr compound_stmt // lookahead token appears because compound_stmt can begin with LBrace
      land_expr // lookahead token is inherited
      or_expr // lookahead token is inherited
      xor_expr // lookahead token is inherited
      and_expr // lookahead token is inherited
      equality_expr // lookahead token is inherited
      relation_expr // lookahead token is inherited
      shift_expr // lookahead token is inherited
      additive_expr // lookahead token is inherited
      multiplicative_expr // lookahead token is inherited
      unary_expr // lookahead token is inherited
      postfix_expr // lookahead token is inherited
      primary_expr // lookahead token is inherited
      Iden . 

** In state 35, looking ahead at LBrace, shifting is permitted
** because of the following sub-derivation:

While lor_expr compound_stmt 
      land_expr 
      or_expr 
      xor_expr 
      and_expr 
      equality_expr 
      relation_expr 
      shift_expr 
      additive_expr 
      multiplicative_expr 
      unary_expr 
      postfix_expr 
      primary_expr 
      Iden . LBrace loption(separated_nonempty_list(Comma,expr)) RBrace 
